loc_table <- lapply(loc_trans, function(x) { geocode(x)})
print(loc_table)
}
loc_finder(loc)
View(loc_finder(loc))
h <- t(loc_finder(loc))
h
View(h)
(loc_finder(loc)
loc_finder(loc)
loc_finder(loc)
data.frame(loc_finder(loc))
lol(data.frame)
a <- data.frame(loc_finder(loc))
a
View(a)
a <- data.frame(loc_finder(loc), ncol = 2)
View(a)
a <- data.frame(loc_finder(loc), ncol = 3)
View(a)
a <- data.frame(loc_finder(loc), nrow = 2)
View(a)
a <- as.data.frame(loc_finder(loc), nrow = 2)
a <- as.data.frame(loc_finder(loc), ncol = 2)
View(a)
a <- as.data.frame(loc_finder(loc), ncol = 2)
View(a)
a <- as.matrix(loc_finder(loc), ncol = 2)
a
View(a)
a <- as.matrix(loc_finder(loc))
View(a)
a <- data.matrix(loc_finder(loc))
View(a)
loc
head(loc)
geocode("Louisville Metro")
a <- data.matrix(loc_finder(loc))
a[2]
View(a[2])
a <- data.matrix(loc_finder(loc))
a
View(a)
a[2]
a[1]
a[0]
a[1]
for (i in a[i]){
print[a[i]]
}
loc_finder(loc)
View(loc_finder(loc))
a <- data.matrix(loc_finder(loc))
View(a)
a <- data.matrix(loc_finder(loc), ncol = 2)
a <- data.matrix(loc_finder(loc), ncol = 2)
a <- data.matrix(loc_finder(loc))
a[1]
a[2]
for (i in 1:10) {
print(i)
}
for (i in 1:10) {
print(a[i])
}
for (i in 1:10) {
c <- a[i]
}
c
View(c)
for (i in 1:10) {
print(a[i])
}
length(a)
for (i in 1:length(a)) {
print(a[i])
}
for (i in 1:length(a)) {
View(a[i])
}
a <- data.frame(loc_finder(loc))
View(a)
for (i in 1:length(a)) {
print(a[i])
}
a <- data.matrix(loc_finder(loc))
View(a)
out_loc <- matrix(0, nrow=length(a), ncol=length(a))
str(out_loc)
out_loc <- matrix(0, nrow=length(a), ncol=length(2))
str(out_loc)
View(out_loc)
out_loc <- matrix(0, nrow=length(a), ncol=length(3))
View(out_loc)
out_loc <- matrix(0, nrow=length(a), ncol=length(a))
View(out_loc)
out_loc <- matrix(0, nrow=length(a), ncol=2)
View(out_loc)
for (i in 1:length(a)) {
for(n in 1:2)
{out_mat[i,n] <- c
}
}
for (i in 1:length(a)) {
for(n in 1:2)
{out_loc[i,n] <- c
}
}
a
for (i in 1:length(a)) {
print(a[i])
#out_loc[] <- c
}
a[1]
a[1,]
a[[1]]
a[1][1]
a[1,1]
a[1]
a$1
a[1]
a$loc
a <- data.frame(loc_finder(loc))
View(a)
t(a)
View(t(a))
a <- data.frame(loc_finder(loc))
View(t(a))
a <- data.frame(loc_finder(loc))
library(WriteXLS)
?WriteXLS
write.csv(a, file = "foo.csv")
b<-t(a)
write.csv(a, file = "foo.csv")
write.csv(b, file = "foo.csv")
geo <- read.csv("geo.csv")
head(geo)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude), data = geo,
alpha = 0.5, color = "darkred", size = 3)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude), data,
alpha = 0.5, color = "darkred", size = 3)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude),
alpha = 0.5, color = "darkred", size = 3)
geo[,1]
geo[1,1]
geo[2,1]
geo[1,2]
geo[1,2]
geo[1,3]
Longitude <- geo[1,2]
Latitude <- geo[1,3]
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude),
alpha = 0.5, color = "darkred", size = 3)
Longitude <- geo[,2]
Longitude
Latitude <- geo[,3]
head(Latitude)
Longitude <- geo[,2]
Latitude <- geo[,3]
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude),
alpha = 0.5, color = "darkred", size = 3)
geo
colnmaes(geo)
colnames(geo)
colnames(geo) <- c("name", "Longitude", "Latitude")
geo
head(geo)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude, data = geo),
alpha = 0.5, color = "darkred", size = 3)
library(ggmap)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude, data = geo),
alpha = 0.5, color = "darkred", size = 3)
geo_lengh <- geo[,1:2]
geo_lengh
geo_lengh <- geo[,2:3]
View(geo_lengh)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude, data = geo),
alpha = 0.5, color = "darkred", size = 3)
geo_lengh <- data.frame(geo[,2:3])
head(geo_lengh)
ggmap(myMap) +
geom_point(aes(x = Longitude, y = Latitude, data = geo),
alpha = 0.5, color = "darkred", size = 3)
ggmap(myMap) +
geom_point(aes(x = geo$Longitude, y = geo$Latitude, data = geo),
alpha = 0.5, color = "darkred", size = 3)
geo_lengh
str(geo_lengh)
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"], col = NA_real_)
geo_data
list(geo_data)
list(geo_data)
str(geo_data)
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"], col = NA_real_)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
View(geo_data)
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
head(geo_data)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
na.omit(geo_data)
View(geo_data)
a <- na.omit(geo_data)
View(a)
geo_data2 <- na.omit(geo_data)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data2,
alpha = 0.5, color = "darkred", size = 3)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 6)
myMap
ggmap(myMap)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data2,
alpha = 0.5, color = "darkred", size = 3)
geocode("Louisville Metro")
View(geo_data)
geocode("Louisville Metro")
geocode("Stanton")
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 5)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
geocode("Louisville Metro")
geocode("Louisville Metro, IN")
geocode("Louisville Metro indiana")
geocode("Stanton")
geocode("Stanton, indiana")
loc_raw <- read.csv("SLIC_Center_Name.csv")
loc <- data.frame(loc_raw[,2])
loc_finder <- function(n) {
loc_trans <- t(n) #Transpose Data
loc_table <- lapply(loc_trans, function(x) { geocode(x)})
print(loc_table)
}
a <- data.frame(loc_finder(loc))
b<-t(a)
write.csv(b, file = "foo.csv")
geo <- read.csv("geo.csv")
colnames(geo) <- c("name", "Longitude", "Latitude") # change col name
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 6)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
#Define map source, type, color (Load Indiana Map)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 5)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
geocode("Hazard,Indiana")
geocode("Hazard,ky")
geocode("Portsmouth, OH")
geocode("Anderson KY")
geocode("Anderson,Indiana")
geocode("Ashland, KY")
loc_raw <- read.csv("SLIC_Center_Name.csv")
loc <- data.frame(loc_raw[,2])
a <- data.frame(loc_finder(loc))
b<-t(a)
write.csv(b, file = "foo.csv")
geo <- read.csv("geo.csv")
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
geo_data
#Add points
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
geocode("City, Oh")
geocode("Grove City,OH")
geocode("Tri city, IN")
geocode("Tri City, IN")
geocode("Tri City, Westvile, IN")
geocode("Tri City, Westville, IN")
geo <- read.csv("geo.csv")
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 7)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 6.5)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 6)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
myMap <- get_map(location=myLocation, source="google",
maptype="roadmap", crop = F, zoom = 5)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
library(ggmap)
library(dplyr)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_area(range = c(3,20))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_size(range = c(3,20))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_colour_gradient(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_colour_manual(values = rainbow_hcl(7))
install.packages("colorspace")
install.packages("colorspace")
library(colorspace)
?colorspace
?colourspace
install.packages("colorspace")
install.packages("colorspace")
library(colorspace)
checkRVersion(quiet = FALSE)
checkRVersion(quiet = FALSE)
version
?Memory
R_MAX_MEM_SIZE
memory.size
memory.limit
update.packages("ggmap")
update.packages("colorspace")
library(ggmap)
library(colorspace)
library(colorspace)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = "darkred", size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = geo_data(x), size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = factor(x), size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = x, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
alpha = 0.5, color = rainbow_hcl(7), size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = rainbow_hcl(7), size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
colour = rainbow_hcl(7), size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = red, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = green, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = "green", size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = rainbow(4), size = 3)
set.seed(50)
df <- data.frame(val = rnorm(50))
df
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data,
color = df, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, size = 3)
#Add points
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, size = 3) +
scale_colour_gradientn(colours=rainbow(4))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = df, size = 3) +
scale_colour_gradientn(colours=rainbow(4))
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = "darkred", alpha = .5, size = 3)
set.seed(50)
df <- data.frame(val = rnorm(50))
df
set.seed(100)
df <- data.frame(val = rnorm(100))
df
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = df, alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = c(1,2,3,4,5), alpha = .5, size = 3)
geo_data
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = , alpha = .5, size = 3)
geo <- read.csv("geo.csv")
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = , alpha = .5, size = 3)
geo
head(geo)
geo$Longitude
geo$Latitude
geo <- data.frame(geo)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = , alpha = .5, size = 3)
geo <- data.frame(geo)
geo
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = , alpha = .5, size = 3)
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = , alpha = .5, size = 3)
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = , alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = , alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = , alpha = .5, size = 3)
library(ggmap)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = , alpha = .5, size = 3)
geo <- read.csv("geo.csv")
geo_data <- data.frame(x <- geo[,"Longitude"], y <- geo[, "Latitude"])
geo_data
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = darkred, alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(x,y), data = geo_data, color = "darkred", alpha = .5, size = 3)
geo <- data.frame(geo)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = "darkred", alpha = .5, size = 3)
geo
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = ZIP, alpha = .5, size = 3)
geo
geo$ZIP
ggmap(myMap) +
geom_point(aes(Longitude,Latitude), data = geo, color = ZIP, alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = .5, size = 3)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = .5, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
library(colorspace)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = .5, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
head(geo)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = Name), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = as.factor(Name), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
s
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = as.factor(Name), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = as.factor(Name)), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP, data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(7))
)
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(4))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = 1, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(4))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = 0.8, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(4))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = 0.5, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(4))
ggmap(myMap) +
geom_point(aes(Longitude,Latitude, color = ZIP), data = geo, alpha = 0.8, size = 3) +
scale_colour_gradientn(colours = rainbow_hcl(4))
